{
	"swagger": "2.0",
	"info": {
		"version": "1.0",
		"title": "FreeCodingSchool API",
		"description": "FreeCodingSchool API powers the new-customer registration process."
	},
	"host": "localhost:4044",
	"basePath": "/api",
	"schemes": [
		"http",
		"https"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/signup": {
			"post": {
				"tags": [
					"Signup"
				],
				"description": "Accounts must be verified before authentication",
				"summary": "Authenticate account crendentials and return the login page",
				"parameters": [{
					"first_name": "name",
					"in": "body",
					"required": true,
					"description": "User to signup",
					"schema": {
						"$ref": "#/definitions/signup"
					}
				}],
				"responses": {
					"200": {
						"description": "Success Response",
						"schema": {
							"$ref": "#/definitions/RegistrationResponse"
						}
					},
					"400": {
						"description": "Invalid Request"
					}

				}
			}
		},
		"/signin": {
			"post": {
				"tags": [
					"Signin"
				],
				"description": "Accounts must be registered before singin ",
				"summary": "Authenticate the user and return to the login page",
				"parameters": [{
					"first_name": "name",
					"in": "body",
					"required": true,
					"description": "User to signin",
					"schema": {
						"$ref": "#/definitions/signin"
					}
				}],
				"responses": {
					"200": {
						"description": "Success Response",
						"schema": {
							"$ref": "#/definitions/RegistrationResponse"
						}
					},
					"400": {
						"description": "Invalid Credentials"
					}
				}
			}
		},
		"/course": {
			"post": {
				"tags": [
					"Course"
				],
				"description": "Only admin can add the course ",
				"summary": "Authenticate the admin and return to the course page",
				"parameters": [{
					"course_name": "name",
					"in": "body",
					"required": true,
					"description": "Admin to add courses",
					"schema": {
						"$ref": "#/definitions/course"
					}
				},{
					"$ref": "#/parameters/token"
				}],
				"responses": {
					"200": {
						"description": "Success Response",
						"schema": {
							"$ref": "#/definitions/RegistrationResponse"
						}
					},
					"400": {
						"description": "Invalid Credentials"
					}
				}
			},
			"get": {
				"tags": [
				  "Course"
				],
				"description": "This will retrieve an existing courses  added by admin",
				"summary": "Retrieve an existing course",
				"parameters": [
				  {
					"$ref": "#/parameters/course"
				  }
				],
				"responses": {
				  "200": {
					"description": "Successfully Response with 0 or more courses",
					"schema": {
					  "$ref": "#/definitions/course"
					}
				  },
				  "404": {
					"description": "Not Found"
				  }
				}
			}
		},
		"/course/{id}": {
			"get": {
				"tags": [
				  "Course"
				],
				"description": "This will retrieve an particular existing course added by admin",
				"summary": "Retrieve a particular existing course",				
				"responses": {
				  "200": {
					"description": "Successfully Response with 0 or more courses",
					"schema": {
					  "$ref": "#/definitions/course"
					}
				  },
				  "404": {
					"description": "Not Found"
				  }
				}
			}		
		},
		"/review": {
			"post": {
				"tags": [
					"Testimonial"
				],
				"description": "Any registered user can give a review ",
				"summary": "Once the user add the review direct him to the course page which he registered",
				"parameters": [{
					"name": "name",
					"in": "body",
					"required": true,
					"description": "User to add review",
					"schema": {
						"$ref": "#/definitions/review"
					}
				}, {
					"$ref": "#/parameters/token"
				}],
				"responses": {
					"200": {
						"description": "Success Response",
						"schema": {
							"$ref": "#/definitions/RegistrationResponse"
						}
					},
					"400": {
						"description": "Invalid Credentials"
					}
				}
			},
			"get": {
				"tags": [
				"Testimonial"
				],
				"description": "This will retrieve an existing review given by users",
				"summary": "Retrieve an existing testimonial",			
				"responses": {
				"200": {
					"description": "Successfully Response with 0 or more testimonials",
					"schema": {
					"$ref": "#/definitions/review"
					}
				},
				"404": {
					"description": "Not Found"
				}
			}
			}	
		}
	},
	"definitions": {
		"signup": {
			"title": "Register information of the user",
			"type": "object",
			"properties": {
				"first_name": {
					"description": "Name of the user for signup",
					"type": "string",
					"x-example": "abc"
				},
				"email": {
					"description": "Valid Email of the user for signup",
					"type": "string",
					"x-example": "abc@gmail.com"
				},
				"role": {
					"description": "Role of the user",
					"type": "string",
					"x-example": "STUDENT",
					"enum": [
						"STUDENT",
						"VOLUNTEER",
						"PARENT"
					]
				},
				"password": {
					"description": "Good password for sign up",
					"type": "string",
					"x-example": "Abcd@123"
				}

			},
			"required": [
				"first_name",
				"email",
				"password"

			]
		},
		"signin": {
			"title": "Signin if registered user",
			"type": "object",
			"properties": {
				"email": {
					"description": "Valid and registered Email of the user for signin",
					"type": "string",
					"x-example": "abc@gmail.com"
				},
				"password": {
					"description": "valid password for sign up",
					"type": "string",
					"x-example": "Abcd@123"
				}
			},
			"required": [
				"email",
				"password"
			]
		},
		"course":{
			"title": "Add course if you are an admin",
			"type":"object",
			"properties":{
				"course_name": {
					"description": "Relevant name of the course",
					"type": "string",
					"x-example": "Scratch"
				},
				"description": {
					"description": "Relevant description of the course",
					"type": "string",
					"x-example": "Scratch is a block based programming"
				},
				"days": {
					"description": "The date when the course starts",
					"type": "string",
					"x-example": ["Monday"]
				},
				"start_time": {
					"description": "The start time when the course is scheduled ",
					"type": "string",
					"x-example": "07:30pm"
				},
				"end_time": {
					"description": "The end time when the course is scheduled ",
					"type": "string",
					"x-example": "08:30pm"
				}

			},
			"required": [
				"course_name",
				"description",
				"date",
				"time"
			]
		},
		"review":{
			"title": "Kindly give your Feedback",
			"type":"object",
			"properties":{
				"name": {
					"description": " Name of the user",
					"type": "string",
					"x-example": "abc"
				},
				"designation": {
					"description": "Designation of the user",
					"type": "string",
					"x-example": "STUDENT",
					"enum": [
						"STUDENT",
						"VOLUNTEER",
						"PARENT"
					]
				},
				"org_or_school": {
					"description": "the orgnization where the user is working or studying in",
					"type": "string",
					"x-example": "Company name"
				},
				"review": {
					"description": "The feedback for the course about how it was",
					"type": "string",
					"x-example": "Good course"
					
				}

			},
			"required": [
				"name",
				"designation",
				"org_or_school",
				"review"
			]
		},
		"RegistrationResponse":{
			"title": "Signin / Signup Reponse",
			"type": "object",
			"properties": {
				"token": {
					"description": "JWT token",
					"type": "string",
					"x-example": "dffdfdffdff"
				}
			}
		},
		"ErrorResponse": {
			"title": "Error Response",
			"type": "object",
			"properties": {
				"message": {
					"description": "Human-readable error message",
					"type": "string"
				},
				"httpStatusCode": {
					"description": "Http status code as returned in response",
					"type": "integer"
				},
				"origin": {
					"description": "Source system where the error occurred",
					"type": "string"
				},
				"errors": {
					"description": "Underlying error messages",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"message",
				"httpStatusCode"
			]
		}
	},
	"parameters": {
		"token": {
			"name": "token",
			"in": "header",
			"description": "Authorization Token",
			"type": "string",
			"required": true
		},
		"course": {
			"name": "course",
			"in": "path",
			"description": "Course ID",
			"type": "string",
			"required": true
		}
	}	
}
